/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

/*
 * @Filename - Elements.sim
 * @Author - Azeez Adewale & Abdulazeez Abdulazeez Adeshina
 * @Date - 08 August 2018 (Date modified)
 * @Time - 20:50 PM
 * @License - MIT License
 *
 */

module web.front.elements

from web.front.elements.Element

class Div : Element

	elementName = "div"
	Init(elementName)
	
	block Div(id)
		SetId(id)
	
	block SetSize(height, width)
		elementHeight = height
		elementWidth = width
		elementStyle += 'height:'+elementHeight+';width:'+elementWidth+';'
		
	block AddDiv(indiv)
		elementContent + indiv.ToString() + crlf


STICKY_FOOTER  = 0
RESPONSIVE_FOOTER = 1

class Footer : Div

	footerHead = "<footer "
	footerType = "fixed"
	alignment = ALIGN_LEFT
	
	block Footer(id)
		SetId(id)
	
	block SetType(type)
		if type == STICKY_FOOTER 
			footerType = FOOTER_FIXED_POSITTION
		elif type == RESPONSIVE_FOOTER 
			footerType = FOOTER_ABSOLUTE_POSITTION
		end
		
	block SetAlignment(position)
		alignment = position
	
	block ToString()
		finalDiv = footerHead + elementStyle+'position:'+footerType+';bottom:0;'+alignment+'overflow:hidden;" '+styleClass+'" > 
		'+elementContent+'\t</footer>'
		return finalDiv
		
	private 
		FOOTER_FIXED_POSITTION = "fixed"
		FOOTER_ABSOLUTE_POSITTION = "absolute"


class Head

	headContent = "" ;
	title = "<title>SIMPLE WEB</title>"
	icon = ""
	toppings = "
	
			"
	
	block SetTitle(ititle)
		title = '<title>'+ititle+'</title>' + crlf
		
	block SetIcon(iconLocation)
		icon = '<link rel="icon" href="'+iconLocation+'" >' + crlf
		
	block SetFavicon(iconLocation)
		SetIcon(iconLocation)
	
	block AddElement(element)
		headContent += '\t'+element.ToString() + '
		'
		
	block AddMeta(headMeta)
		headContent += '\t'+headMeta.ToString() + '
		'
		
	block AddLink(headLink)
		headContent += '\t'+headLink.ToString() + '
		'
		
	block AddScript(script)
		headContent += '\t'+script.ToString() + '
		'
		
	block AddContent(itoppings)
		toppings += '\t'+istoppings + '
		'
	
	block ToString()
		return '<head>
			'+title+
					'\t'+icon+'\t
		'+ headContent+'\t
		'+toppings+'
		</head>'
		
		
class HeadMeta
	
	headMetaData = "<meta "

	block SetName(name)
		headMetaData += 'name="'+name+'" '

	block SetProperty(prop)
		headMetaData += 'property="'+prop+'" '
		
	block SetItemProp(item)
		headMetaData += 'itemprop="'+item+'" '
		
	block SetContent(content)
		headMetaData += 'content="'+content+'" '
		
	block ToString()
		headMetaData += '/>'
		return headMetaData
		
class HeadLink

	headLink = "<link "

	block SetRel(rel)
		headLink += 'rel="'+rel+'" '
		
	block SetType(type)
		headLink += 'type="'+type+'" '
		
	block SetTitle(title)
		headLink += 'title="'+title+'" '
		
	block SetLink(link)
		headLink += 'href="'+link+'" '
		
	block SetHref(link)
		headLink += 'href="'+link+'" '
	
	block ToString()
		headLink += '/>'
		return headLink
	
	
class Table : Element

	elementName = "table"
	Init(elementName)
	tableHeadContent = ' <thead><tr>'+crlf
	tableBodyContent = ' <tbody>'+crlf
	tableHasBody = false
	
	block Table(id)
		SetId(id)
		
	block AddToHead(headlist)
		if (IsList(headlist))
			tableHeadContent+= '<tr>' 
			hlen = LengthOf(headlist) - 1
			for a = 0 to hlen
				if (IsString(headlist[a]))
					tableHeadContent+= '<th>'+headlist[a]+'</th>' + crlf
				else
					tableHeadContent+= '<th>'+headlist[a].ToString()+'</th>' + crlf
				end
			end
			tableHeadContent+= '</tr>'
		end
		
	block AddToBody(bodylist)
		if (IsList(bodylist))
			if (tableHasBody) tableBodyContent+= crlf +'<tr>' end
			tableHasBody = true
			hlen = LengthOf(bodylist) - 1
			for a = 0 to hlen
				if (IsString(bodylist[a]))
					tableBodyContent+= '	<td>'+bodylist[a]+'</td>' + crlf
				elif (IsList(bodylist[a]))
					outer = bodylist[a]
					AddToBody(outer)
				else
					try 
						outer = bodylist[a].ToList() 
						AddToBody(outer)
					catch
						tableBodyContent+= '	<td>'+bodylist[a].ToString()+'</td>' + crlf
					end
					
				end
			end
			if (tableHasBody) tableBodyContent+= crlf +'</tr>' end
		end
		
	block ToString()
		finalDiv = '\t\t'+elementHead + elementId+' '
		if elementSetStyle
			finalDiv += elementStyle+'" '
		end
		if elementSetClass 
			finalDiv += styleClass+'" ' 
		end
		finalDiv += '> '+elementContent+'
			'+tableHeadContent+'</thead>
			'+tableBodyContent+'<tbody>'
		if inline 
			finalDiv += '</'+elementName+'>' 
		else 
			finalDiv += '
		\t</'+elementName+'>'
		end
		
		return finalDiv
		
	
	block SetSize(height, width)
		elementHeight = height
		elementWidth = width
		elementStyle += 'height:'+elementHeight+';width:'+elementWidth+';'
	

class ScriptLink

	sriptLink = "<script "
	
	block SetSrc(src)
		sriptLink += 'src="'+src+'" '
		
	block ToString()
		sriptLink += '></script>'
		return sriptLink

class Link : Element 

	elementName = "a"
	Init(elementName)
	
	block Link(title, address)
		SetAddress(address)
		SetTitle(title)
		SetInline(true)
	
	block SetAddress(address)
		elementHead += 'href="'+address+'" '
		
	block SetTitle(title)
		elementContent += title
		
class Ul : Element
	
	elementName = "ul"
	Init(elementName)
	

class Li : Element
	
	elementName = "li"
	Init(elementName)
	
	block Li(id)
		SetId(id)	
		SetInline(true)
	
class Header : Div

	elementName = "header"
	Init(elementName)
	
	block Header(id)
		SetId(id)
		
class Section : Div

	elementName = "section"
	Init(elementName)
	
	block Section(id)
		SetId(id)
		
class H1 : Element
	
	elementName = "h1"
	Init(elementName)

	block H1(id)
		SetId(id)	
		SetInline(true)

class H2 : Element
	
	elementName = "h1"
	Init(elementName)	

	block H2(id)
		SetId(id)
		SetInline(true)
		
class Nav : Element
	
	elementName = "nav"
	Init(elementName)	

	block Nav(id)
		SetId(id)
		
class Article : Element
	
	elementName = "article"
	Init(elementName)	

	block Article(id)
		SetId(id)
		
	
		
	
		
	

	