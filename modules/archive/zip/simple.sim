/* 
	Copyright (c) 2016-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/
/* 
	Copyright (c) 2016-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

from archive.zip.ZipEntry
from archive.zip.Zip
from simple.util.Console
import simple.core

block Main()
	cmdparamsLen = LengthOf(cmdparams) - 1
	zipFile = null
	operation = null
	outDir = null
	for a = 0 to cmdparamsLen {
		param = cmdparams[a]
		if param == "-l" or param == "--list" {
			operation = "list"
		elif param == "-e" or param == "--extract"
			operation = "extract"
		elif param == "-c" or param == "--create"
			operation = "create"
		elif StrEndsWith(param,".zip") 
			zipFile = param
			if !IsNull(operation) and operation == "extract" {
				outDir = cmdparams[a+1]
			}
		else
			if !IsNull(operation) {
				if operation == "create" {
					if IsNull(outDir) { outDir = [] }
					__add_to_list(outDir,param)  
				}
			}
		}
	}
	if IsNull(operation) {
		Throw("No operation detected, add the flag '-h' to view help message")
		return
	}
	if IsNull(zipFile) {
		Throw("No zip file specified")
		return
	}
	if operation == "list" {
		zip = new Zip(zipFile, "r")
		for entry in zip {
			stdout.Println(entry.ToString())
		}
	elif operation == "extract"
		zip = new Zip(zipFile, "r") {
			Extract(outDir)
		}
		
	elif operation == "create"
		zip = new Zip(zipFile, "w")
		for entry in outDir {
			if StrEndsWith(entry, "/") {
				new ZipEntry(zip, entry) {
					Dwrite(entry)
				}
			else
				new ZipEntry(zip, entry) {
					Fwrite(entry)
				}
			}
		}
		zip.Close()
	}
	