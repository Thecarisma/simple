
/*

*/
from simple.core.Object
from simple.graphics.Dimension
from simple.system.System

/*

*/
module simple.system

/*

*/
class ScreenDimension : Dimension

    /*

    */
    Width = 0

    /*

    */
    Height = 0

    /*

    */
    AbWidth = 0

    /*

    */
    AbHeight = 0

    /*

    */
    ScreenDimensions = null

    /*

    */
    block init()
        return self

    /*

    */
    block getWidth()
        if Width == 0 {
            Width = primaryScreenWidth()
        }
        return Width

    /*

    */
    block getHeight()
        if Height == 0 {
            Height = primaryScreenHeight()
        }
        return Height

    /*

    */
    block getAbWidth()
        if AbWidth == 0 {
            AbWidth = absoluteScreenWidth()
        }
        return AbWidth

    /*

    */
    block getAbHeight()
        if AbHeight == 0 {
            AbHeight = absoluteScreenHeight()
        }
        return AbHeight

    /*

    */
    block getScreenHeight(params...)
        paramsLen = lengthOf(params)

        if paramsLen == 0 {
            return getHeight()

        elif paramsLen == 1
            index = params[0]
            if isNull(index) {
                throw(self,"The monitor index is invalid . Index cannot be null, first monitor at 1 ")
            } 
            if index == 0 {
                throw(self,"The monitor index is invalid . Index cannot be zero, first monitor at 1 ")
            elif !isNull(index) and isNumber(index) 
                if index <= monitorCount() and index > 0 {
                    return SystemScreenSizes[index-1][1]
                else
                    throw(self,"The monitor index is invalid . Monitor Count is " + monitorCount() + "")
                }
            else
                throw(self,"Invalid parameter passed expecting (Number). Found (" + objectType(index) + ")")
            }

        else 
            throw(self,"Only one parameter allowed as index to get Screen Height")
        }

    /*

    */
    block getScreenWidth(params...)
        paramsLen = lengthOf(params)

        if paramsLen == 0 {
            return getWidth()

        elif paramsLen == 1
            index = params[0]
            if isNull(index) {
                throw(self,"The monitor index is invalid . Index cannot be null, first monitor at 1 ")
            } 
            if index == 0 {
                throw(self,"The monitor index is invalid . Index cannot be zero, first monitor at 1 ")
            elif !isNull(index) and isNumber(index) 
                if index <= monitorCount() and index > 0 {
                    return SystemScreenSizes[index-1][0]
                else
                    throw(self,"The monitor index is invalid . Monitor Count is " + monitorCount() + "")
                }
            else
                throw(self,"Invalid parameter passed expecting (Number). Found (" + objectType(index) + ")")
            }

        else 
            throw(self,"Only one parameter allowed as index to get Screen Width")
        }

    /*

    */
    block toDimension(params...)
        paramsLen = lengthOf(params)

        if paramsLen == 0 {
            width = SystemScreenSizes[0][0]
            height = SystemScreenSizes[0][1]
			dimension = new Dimension(width,height)
            return dimension

        elif paramsLen == 1
            index = params[0]
            if isNull(index) {
                throw(self,"The monitor index is invalid . Index cannot be null, first monitor at 1 ")
            } 
            if index == 0 {
                throw(self,"The monitor index is invalid . Index cannot be zero, first monitor at 1 ")
            elif !isNull(index) and isNumber(index) 
                if index <= monitorCount() and index > 0 {
                    width = SystemScreenSizes[index-1][0]
                    height = SystemScreenSizes[index-1][1]
					dimension = new Dimension(width,height)
                    return dimension
                else
                    throw(self,"The monitor index is invalid . Monitor Count is " + monitorCount() + "")
                }
            else
                throw(self,"Invalid parameter passed expecting (Number). Found (" + objectType(index) + ")")
            }

        else 
            throw(self,"Only one parameter allowed as index to get Screen Dimension")
        }
        return null

    /*

    */
    block toAbDimension()
        width = getAbWidth()
        height = getAbHeight()
		dimension = new Dimension(width, height)
        return dimension

    /*

    */
    block screenDimensions()
        if isNull(ScreenDimensions) {
            ScreenDimensions = []
            for a = 0 to monitorCount() - 1 {
                width = SystemScreenSizes[a][0]
                height = SystemScreenSizes[a][1]
                dimension = new Dimension(width,height)
                ScreenDimensions + dimension
            }
        }
        return ScreenDimensions

    /*

    */
    block getScreenDimensions()
        return screenDimensions()


    /*

    */
    block toString()
        monitorValue = ""
        for a = 0 to monitorCount() - 1 {
            monitorValue += "[Monitor" + (a+1) + "[Width=" + SystemScreenSizes[a][0] + ",Height=" + SystemScreenSizes[a][1] + "]],"
        }
        return "[" + absolutename() + ":" + monitorValue + "AbWidth=" + getAbWidth() + ",AbHeight=" + getAbHeight() + "]"

    /*

    */
    private 

        /*

        */
        block setWidth()

        /*

        */
        block setHeight()

        /*

        */
        block setAbWidth()

        /*

        */
        block setAbHeight()

        /*

        */
        block setScreenDimensions()
        

