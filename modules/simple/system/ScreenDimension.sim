
/*

*/
from simple.core.Object
from simple.graphics.Dimension
from simple.system.System

/*

*/
module simple.system

/*

*/
class ScreenDimension : Dimension

    /*

    */
    Width = 0

    /*

    */
    Height = 0

    /*

    */
    AbWidth = 0

    /*

    */
    AbHeight = 0

    /*

    */
    ScreenDimensions = null

    /*

    */
    block Init()
        return self

    /*

    */
    block GetWidth()
        if Width == 0 {
            Width = PrimaryScreenWidth()
        }
        return Width

    /*

    */
    block GetHeight()
        if Height == 0 {
            Height = PrimaryScreenHeight()
        }
        return Height

    /*

    */
    block GetAbWidth()
        if AbWidth == 0 {
            AbWidth = AbsoluteScreenWidth()
        }
        return AbWidth

    /*

    */
    block GetAbHeight()
        if AbHeight == 0 {
            AbHeight = AbsoluteScreenHeight()
        }
        return AbHeight

    /*

    */
    block GetScreenHeight(params...)
        paramsLen = LengthOf(params)

        if paramsLen == 0 {
            return GetHeight()

        elif paramsLen == 1
            index = params[0]
            if IsNull(index) {
                Throw(self,"The monitor index is invalid . Index cannot be null, first monitor at 1 ")
            } 
            if index == 0 {
                Throw(self,"The monitor index is invalid . Index cannot be zero, first monitor at 1 ")
            elif !IsNull(index) and IsNumber(index) 
                if index <= MonitorCount() and index > 0 {
                    return SystemScreenSizes[index-1][1]
                else
                    Throw(self,"The monitor index is invalid . Monitor Count is " + MonitorCount() + "")
                }
            else
                Throw(self,"Invalid parameter passed Expecting (Number). Found (" + ObjectType(index) + ")")
            }

        else 
            Throw(self,"Only one parameter allowed as index to get Screen Height")
        }

    /*

    */
    block GetScreenWidth(params...)
        paramsLen = LengthOf(params)

        if paramsLen == 0 {
            return GetWidth()

        elif paramsLen == 1
            index = params[0]
            if IsNull(index) {
                Throw(self,"The monitor index is invalid . Index cannot be null, first monitor at 1 ")
            } 
            if index == 0 {
                Throw(self,"The monitor index is invalid . Index cannot be zero, first monitor at 1 ")
            elif !IsNull(index) and IsNumber(index) 
                if index <= MonitorCount() and index > 0 {
                    return SystemScreenSizes[index-1][0]
                else
                    Throw(self,"The monitor index is invalid . Monitor Count is " + MonitorCount() + "")
                }
            else
                Throw(self,"Invalid parameter passed Expecting (Number). Found (" + ObjectType(index) + ")")
            }

        else 
            Throw(self,"Only one parameter allowed as index to get Screen Width")
        }

    /*

    */
    block ToDimension(params...)
        paramsLen = LengthOf(params)

        if paramsLen == 0 {
            width = SystemScreenSizes[0][0]
            height = SystemScreenSizes[0][1]
			dimension = new Dimension(width,height)
            return dimension

        elif paramsLen == 1
            index = params[0]
            if IsNull(index) {
                Throw(self,"The monitor index is invalid . Index cannot be null, first monitor at 1 ")
            } 
            if index == 0 {
                Throw(self,"The monitor index is invalid . Index cannot be zero, first monitor at 1 ")
            elif !IsNull(index) and IsNumber(index) 
                if index <= MonitorCount() and index > 0 {
                    width = SystemScreenSizes[index-1][0]
                    height = SystemScreenSizes[index-1][1]
					dimension = new Dimension(width,height)
                    return dimension
                else
                    Throw(self,"The monitor index is invalid . Monitor Count is " + MonitorCount() + "")
                }
            else
                Throw(self,"Invalid parameter passed Expecting (Number). Found (" + ObjectType(index) + ")")
            }

        else 
            Throw(self,"Only one parameter allowed as index to get Screen Dimension")
        }
        return null

    /*

    */
    block ToAbDimension()
        width = GetAbWidth()
        height = GetAbHeight()
		dimension = new Dimension(width, height)
        return dimension

    /*

    */
    block ScreenDimensions()
        if IsNull(ScreenDimensions) {
            ScreenDimensions = []
            for a = 0 to MonitorCount() - 1 {
                width = SystemScreenSizes[a][0]
                height = SystemScreenSizes[a][1]
                dimension = new Dimension(width,height)
                ScreenDimensions + dimension
            }
        }
        return ScreenDimensions

    /*

    */
    block GetScreenDimensions()
        return ScreenDimensions()


    /*

    */
    block ToString()
        monitorValue = ""
        for a = 0 to MonitorCount() - 1 {
            monitorValue += "[Monitor" + (a+1) + "[Width=" + SystemScreenSizes[a][0] + ",Height=" + SystemScreenSizes[a][1] + "]],"
        }
        return "[" + Absolutename() + ":" + monitorValue + "AbWidth=" + GetAbWidth() + ",AbHeight=" + GetAbHeight() + "]"

    /*

    */
    private 

        /*

        */
        block SetWidth()

        /*

        */
        block SetHeight()

        /*

        */
        block SetAbWidth()

        /*

        */
        block SetAbHeight()

        /*

        */
        block SetScreenDimensions()
        

