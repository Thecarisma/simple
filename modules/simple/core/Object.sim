/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * #filename - Object.sim
 * #author - Azeez Adewale
 * #date - 5 Febuary 2017
 */

 
/*

*/
from simple.core.Types
from simple.security.Hash
from simple.core.BaseFields
from simple.reflection.Field
 
/*

*/
module simple.core


/*

*/
block CheckNullity(Object object, object s)
	if IsNull(s) { Throw(object,NULL_ERROR_POINTER) }
	
/*

*/
block ObjEquals(object obj1, object obj2)
	if IsList(obj1) {
		if !IsList(obj2) { return false }
		return ListEquals(obj1, obj2)
	elif IsObject(obj1)
		if !IsObject(obj2) { return false }
		if __instance_of(obj1,"Object") {
			return obj1.Equals(obj2)
		else
			return false
		}
	}
	return obj1 == obj2

/*

*/
class Object 

	/*

	*/
	instance = null

	/*

	*/
	block Getinstance()
		return self

	/*

	*/
	block Setinstance(value)
		Throw(self,"You cannot change the instnce of an Object")
		return
	
	/*

	*/
	block Classname()
		return __class_name(self)

	/*

	*/
	block Modulename()
		return __class_module_name(self)

	/*

	*/
	block Absolutename()
		return Modulename() + "." + Classname()

	/*

	*/
	block ToString()
		return "[" + Absolutename() + ":" + Hashcode() + "]"
		
	/*

	*/
	block Hashcode()
		if IsNull(hashcode) {
			hashcode = Hash(Absolutename())
		}
		return hashcode

	/*

	*/
	block Uniquecode()
		if IsNull(uniquecode) {
			uniquecode = Hash(Absolutename()+__rand())
		}
		return uniquecode

	/*

	*/
	block Isinstance(object obj)
		return IsObject(obj) and __instance_of(obj,Classname())

	/*

	*/
	block Equals(object obj)
		if !IsObject(obj) or !__instance_of(obj,"Object") {
			return false
		}
		return (Uniquecode() == obj.Uniquecode())

	/*

	*/
	block Operator(string op,object value)
		switch op {
			case "=="
				return Equals(value)
			case "!="
				return !Equals(value)
			case "getType"
				return Absolutename()
			default 
				Throw(self,"This Object does not define a behaviour for the operator : " + op)
		}
		return self
		
	/*

	*/
	block Type()
		return GetType(self)

	/*

	*/
	block Clone()
		return self
		
	/*
		 
	*/
	block Object()
		return self
		

	/*

	*/
	private 

		/*

		*/
		hashcode = null

		/*

		*/
		uniquecode = null