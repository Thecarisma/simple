/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * #filename - File.sim
 * #author - Azeez Adewale
 * #date - 5 Febuary 2017
 */

/*

*/
from simple.core.Object
from simple.io.Path
 
/*

*/
module simple.io

/*

*/
class File : Path
	
	/*
	
	*/
	string NameOnly = null
	
	/*
	
	*/
	string NameExtension = null
	
	/*
	
	*/
	block Init(string path)
		AbsolutePath = path
		SetAbsolutePath(null)
		UpdateAttributes()
		
	/*
	
	*/
	block GetNameOnly()
		name = GetName()
		_ext = StrAfterChar(name, '.')
		return RemoveStr(name, '.'+_ext)
		
	/*
	
	*/
	block SetNameOnly(string value)
		if IsNull(value) {
			Throw(self, "The parameter cannot be null")
		else
			newName = Directory.AbsolutePath + value + "." + GetNameExtension()
			return RenameTo(newName, false)
		}
		return false
		
	/*
	
	*/
	block GetNameExtension()
		return StrAfterChar(GetName(), '.')

	/*
		
	*/
	block SetNameExtension(string value) 
		if IsNull(value) {
			Throw(self, "The parameter cannot be null")
		else
			newName = Directory.AbsolutePath + GetNameOnly() + "." + value
			return RenameTo(newName, false)
		}
		return false
		
	/*
	
	*/
	block GetExists()
		return IsFile()
		
	/*
	
	*/
	block Exists() 
		return IsFile()
		
	/*
	
	*/
	block ToString()
		return "[" + Absolutename() + ":Name=" + GetName() + ",NameOnly=" + GetNameOnly() + ",NameExtension=" + GetNameExtension() + ",AbsolutePath=" + AbsolutePath + "]"
		
	/*
		Quick read all content of a file as string
	*/
	block ReadAllString()
		EnsureExistence()
		return __read_file(AbsolutePath)
		
	/*
		Quick write string to a file
	*/
	#issue with byte e.g download zip then write
	block Write(string content)
		EnsureExistence()
		if !IsReadable() {
			Throw(self, "Access is denied. You cannot write to the file because it Read Only : " + AbsolutePath)
		else
			try {
				__write_file(AbsolutePath, content)
			catch
				Throw(self, __err__ + ". Error occur while writing to file, ensure the directory exists : " + AbsolutePath )
			}	
		}

	/*

	*/
	block Equals(Object value)
		if !InstanceOf(value,"File") {
			return false
		}
		return AbsolutePath == value.AbsolutePath		
	
	/*
	
	*/
	private

		/*
		
		*/
		block UpdateAttributes()
			super.UpdateAttributes()
			NameExtension = StrAfterChar(GetName(), '.')
			
		
		
	