/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * @Filename- PathType.sim
 * @Author 	- Azeez Adewale
 * @Date 	- 23 July 2017
 * @Time	- 09:47 PM
 */
 
from simple.core.Object
from simple.io.Path

UNKNOWN_PATH_TYPE 			= "unknown"
REGULAR_PATH_TYPE 			= "regular"
WHITEOUT_PATH_TYPE 			= "whiteout"
BLOCK_SPECIAL_PATH_TYPE 	= "block special"
CHAR_SPECIAL_PATH_TYPE 		= "character special"
DIRECTORY_PATH_TYPE 		= "directory"
NAMED_PIPE_PATH_TYPE 		= "named Pipe (fifo)"
SYMBOLIC_LINK_PATH_TYPE 	= "symbolic link"
SOCKET_PATH_TYPE 			= "socket"


class PathType : Object

	block Init(filePath)
		UpdateAttributes(filePath)

	block SetPath(filePath)
		UpdateAttributes(filePath)
		
	block GetPath()
		return __IO_FILE_TYPE_PATH
		
	block GetType()
		return __IO_FILE_TYPE_IVALUE
		
	block GetTypeValue()
		if __IO_FILE_TYPE_IVALUE == 160000 {
			return WHITEOUT_PATH_TYPE
		elif __IO_FILE_TYPE_IVALUE == 60000 
			return BLOCK_SPECIAL_PATH_TYPE
		elif __IO_FILE_TYPE_IVALUE == 20000 
			return CHAR_SPECIAL_PATH_TYPE
		elif __IO_FILE_TYPE_IVALUE == 40000 
			return DIRECTORY_PATH_TYPE
		elif __IO_FILE_TYPE_IVALUE == 10000 
			return NAMED_PIPE_PATH_TYPE
		elif __IO_FILE_TYPE_IVALUE == 120000
			return SYMBOLIC_LINK_PATH_TYPE 
		elif __IO_FILE_TYPE_IVALUE == 100000
			return REGULAR_PATH_TYPE
		elif __IO_FILE_TYPE_IVALUE == 140000
			return SOCKET_PATH_TYPE
		else
			return UNKNOWN_PATH_TYPE
		}
		
	block ToType()
		if __IO_FILE_TYPE_IVALUE == 160000 {
			return null
		elif __IO_FILE_TYPE_IVALUE == 60000 
			return null
		elif __IO_FILE_TYPE_IVALUE == 20000 
			return null
		elif __IO_FILE_TYPE_IVALUE == 40000 
			return new Directory(__IO_FILE_TYPE_PATH)
		elif __IO_FILE_TYPE_IVALUE == 10000 
			return null
		elif __IO_FILE_TYPE_IVALUE == 120000
			return new PathLink(__IO_FILE_TYPE_PATH)
		elif __IO_FILE_TYPE_IVALUE == 100000
			return new File(__IO_FILE_TYPE_PATH)
		elif __IO_FILE_TYPE_IVALUE == 140000
			return null
		else
			return new Path(__IO_FILE_TYPE_PATH)
		}
		
		
	private 
	
		__IO_FILE_TYPE_IVALUE = 0000000
		__IO_FILE_TYPE_PATH = ""
	
		block UpdateAttributes(filePath)
			__IO_FILE_TYPE_PATH = CurePathSlashes(filePath)
			if __check_path(__IO_FILE_TYPE_PATH) != -1 {
				__IO_FILE_TYPE_IVALUE = __path_type(__IO_FILE_TYPE_PATH)
			}
			
			
 