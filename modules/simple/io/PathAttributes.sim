/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 

*/

/* 
 * @Filename- PathAttributes.sim
 * @Author 	- Azeez Adewale
 * @Date 	- 24 July 2017
 * @Time	- 01:01 AM
 */

from simple.core.Object
from simple.io.Path
from simple.util.DateTime

class PathAttributes : Object

	block Init(filePath)
		UpdateAttributes(filePath)
		
	block ReturnSuccess()
		return __IO_FILE_ATTR_SUCCESS
		
	block Size()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_size(__IO_FILE_ATTR_PATH)
		}
		return 0
		
	block NodeNumber()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_node_number(__IO_FILE_ATTR_PATH)
		}
		return 0
		
	block HardLinkCount()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_link_count(__IO_FILE_ATTR_PATH)
		}
		return 0
		
	block UID()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_uid(__IO_FILE_ATTR_PATH)
		}
		return 0
		
	block GID()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_gid(__IO_FILE_ATTR_PATH)
		}
		return 0
		
	block _lastAccessDate()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_access_date(__IO_FILE_ATTR_PATH)
		}
		return null
		
	block LastAccessDate()
		return DateFromPointer(_lastAccessDate())
		
	block _lastDateModified()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_modify_date(__IO_FILE_ATTR_PATH)
		}
		return null
		
	block LastDateModified()
		return DateFromPointer(_lastDateModified())
		
	#created #changed	
	block _lastDateChanged()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_status_date(__IO_FILE_ATTR_PATH)
		}
		return null
	
	block LastDateChanged()
		return DateFromPointer(_lastDateChanged())
		
	block DateCreated()
		return LastDateChanged()
		
	block BlockSize()
		if __IO_FILE_ATTR_SUCCESS {
			return __path_block_size(__IO_FILE_ATTR_PATH)
		}
		return 0
		
	block BlockAllocated()
		tempBlock = 0
		if __IO_FILE_ATTR_SUCCESS {
			tempBlock = __path_blocks(__IO_FILE_ATTR_PATH)
		}
		if tempBlock == -1 {
			tempBlock = (Size() / BlockSize())
		}
		return tempBlock
	
	private 
	
		__IO_FILE_ATTR_SUCCESS = false
		__IO_FILE_ATTR_PATH = ""
		
		block UpdateAttributes(filePath)
			__IO_FILE_ATTR_PATH = CurePathSlashes(filePath)
			if __check_path(__IO_FILE_ATTR_PATH) == -1 {
				__IO_FILE_ATTR_SUCCESS = false
			else
				__IO_FILE_ATTR_SUCCESS = true
			}