
/*

*/
from simple.core.Object
from simple.net.loadnetdymodule

/*

*/
module simple.net.curl

/*

*/
class Curl : Object 

	/*
	
	*/
	string Url = null
	
	/*
	
	*/
	string Port = 80
	
	/*
	
	*/
	list Options = [

	]	
	
	/*
	
	*/
	list Headers = [
	
	]

	/*
	
	*/
	block Init(string url)
		CheckNullity(self,url)		
		CurlPointer = __curl_easy_Init()
		Url = url
		__add_to_list(Options, [10002, Url])
		for option in Options {
			AddOption(option[0], option[1])
		}
		
		
	/*
	
	*/
	block AddOption(number curlOption, string value)
		CheckNullity(self,curlOption)
		CheckNullity(self,value) 
		__curl_easy_setopt(CurlPointer, curlOption, value, "")
		
	/*
	
	*/
	block AddHeader(string header, string value)
		CheckNullity(self,header)
		CheckNullity(self,value)
		Headers[header] = value
		CurlListPointer = __curl_list_append(CurlListPointer, header + ": " + value) 
		
	/*
	
	*/
	block Prepare()
		if LengthOf(Headers) > 0 {
			__curl_easy_setopt(CurlPointer, 10023, CurlListPointer, "")
		}
		AlreadyPrepared = true
		
	/*
	
	*/
	block Perform()
		if !AlreadyPrepared {
			Prepare()
		}
		output = __curl_easy_perform(CurlPointer)
		AlreadyPrepared = false
		return output
		
	/*
	
	*/
	block StrPerform()
		if !AlreadyPrepared {
			Prepare()
		}
		output = __curl_easy_string_perform(CurlPointer)
		AlreadyPrepared = false
		return output
		
	/*
	
	*/
	block Flush()
		__curl_easy_cleanup(CurlPointer)
		AlreadyPrepared = false
		
	/*
	
	*/
	block Done()
		Flush()
		__free_curl_list(CurlListPointer)
		
	/*
	
	*/
	block ToString()
		return "[" + Absolutename() + ":Url=" + Url + ",Port=" + Port + ",AlreadyPrepared=" + AlreadyPrepared + "]"

	/*
	
	*/
	private 
	
		/*
		
		*/
		pointer CurlPointer = null
	
		/*
		
		*/
		pointer CurlListPointer = null
		
		/*
		
		*/
		boolean AlreadyPrepared = false
		
		/*
		
		*/
		private SetOptions()
		
		