/*

*/
from simple.core.DynamicLoader
from simple.util.DateTime
CallModule("libsimple_sqlite") #add date to version

date = new DateTime()
db = __init_sqlite3()
__sqlite3_open("../testfiles/simple_lang_io.db", db)

query = "
        CREATE TABLE Versions (
        Id			INTEGER PRIMARY KEY  AUTOINCREMENT	NOT NULL,
		Version	TEXT	NOT NULL);
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

query = "
        INSERT INTO Versions (Version)
        VALUES  	('simple0.3.36' );
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

versions =  __sqlite3_exec(db,"select * from Versions")
for version in versions {
    display version[:Version] + nl
}

query = "
        CREATE TABLE Downloads (
        Id			INTEGER PRIMARY KEY  AUTOINCREMENT	NOT NULL,
		Name	TEXT	NOT NULL,
        Type		TEXT	NOT NULL,
        OS		TEXT		NOT NULL,
        OS_Code		TEXT		NOT NULL,
        Arch		TEXT	NOT NULL,
        Size		TEXT	NOT NULL,
        Version		INTEGER	NOT NULL,
        Link		INTEGER	NOT NULL,
		Date        CHAR(100) 	NOT NULL);
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

query = "
        INSERT INTO Downloads (Name,Type,OS,OS_Code,Arch,Size,Version,Link,Date)
        VALUES  	('simple0.4.0-windows_i386.exe', 'Installer', 'Windows', 'windows_amd64', 'x64', '12MB', 'simple0.4.0', 'https://sourceforge.net/projects/simple-lang/files/s0.3.36/simple0.3.36-windows_amd64.exe/download', '" + date.ToString() + "' );
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

query = "
        INSERT INTO Downloads (Name,Type,OS,OS_Code,Arch,Size,Version,Link,Date)
        VALUES  	('simple0.4.0-linux_amd64.deb', 'Installer', 'Linux', 'windows_amd64', 'x86', '12MB', 'simple0.4.0', 'https://sourceforge.net/projects/simple-lang/files/s0.3.36/simple0.3.36-windows_amd64.zip/download', '" + date.ToString() + "' );
"
display __sqlite3_exec(db, query)
display __sqlite3_errmsg(db) + nl

downloads =  __sqlite3_exec(db,"select * from Downloads")
for download in downloads {
    display download[:Name] + nl
}

query = "
        CREATE TABLE BLOG (
        Id			INTEGER PRIMARY KEY  AUTOINCREMENT	NOT NULL,
		External	TEXT	NOT NULL,
        Title		TEXT	NOT NULL,
        Slug		TEXT		NOT NULL,
        Excerpt		TEXT	NOT NULL,
        Content		TEXT	NOT NULL,
        AuthorId		INTEGER	NOT NULL,
		Date        CHAR(100) 	NOT NULL);
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

query = "
        INSERT INTO BLOG (Title,External,Slug,Excerpt,Content,AuthorId,Date)
        VALUES  	('Blog 1', 'false', 'blog-1', 'Excerpt', '" + StrCopy("blog", 1000) + "', 1, '25/02/2019' );
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

blogs =  __sqlite3_exec(db,"select * from BLOG")
for blog in blogs {
        display blog[:Id] + nl
}

query = "
        CREATE TABLE ADMIN (
        Id			INTEGER PRIMARY KEY  AUTOINCREMENT	NOT NULL,
		UserName	TEXT	NOT NULL,
		Email		TEXT	NOT NULL,
		FullName		TEXT	NOT NULL,
        Password		TEXT	NOT NULL);
"
#display __sqlite3_exec(db, query)
#display __sqlite3_errmsg(db) + nl

query = "
        INSERT INTO ADMIN (Id, UserName, Email, FullName, password)
        VALUES  	(2, 'Youngestdev', 'abceek2018@gmail.com', 'Abdulazeez Abdulazeez Adeshina', 'seriously' );
"
display __sqlite3_exec(db, query)
display __sqlite3_errmsg(db) + nl

__sqlite3_close(db)