from simple.debugging.Throw

num
num2 = "12345123451234512345"
num = new BigNum(num1)
num = num + num2
@num.Value()

class BigNum 

	n = ""

	block BigNum(n)
		/*tempArray = ""
		count = 0 
		nl = LengthOf(n) - 1
		for i = 0 to nl {
			if count == 9
				count = 0 
				this.n + (0+tempArray) tempArray = "" 
			end
			tempArray += n[i]
			if i < nl count++ else this.n + (0+tempArray) tempArray = ""  end
		} */
		this.n = n
		
	block Operator(operator,invalue)
		switch operator {
			case "+"
				value = "" 
				sum = ""
				if IsString(invalue) or IsNumber(invalue) {
					value += invalue
				}
				l1 = LengthOf(n) - 1
				l2 = LengthOf(value) - 1
				carryOver = 0
				k = 0
				i = 0
				j = l2 
				for i = l1 to 0 step -1 {
					tempSum = (0 + n[i] + value[j] + carryOver) % 10
					carryOver = (0 + n[i] + value[j] + carryOver) / 10 
					carryOver = 0+__left(""+carryOver,__substr(""+carryOver, ".") - 1)
					sum += tempSum
					if j == 0 break end
					j-- 
				} 
				if (l1 > l2) { 
					while (i >= 0 ) {
						tempSum = (0 + n[i] + carryOver) % 10 
						carryOver = (0 + n[i] + carryOver) / 10 
						carryOver = 0+__left(""+carryOver,__substr(""+carryOver, ".") - 1)
						sum += tempSum
						i--
					}
				elif l1 < l2 
					while (j >= 0) {
						tempSum = (0 + value[j] + carryOver) % 10
						carryOver = (0 + value[j--] + carryOver) / 10 
						carryOver = 0+__left(""+carryOver,__substr(""+carryOver, ".") - 1)
						sum += tempSum
						j--
					}
				else 
					if carryOver > 0 sum += 0 + carryOver end
				}
				this.n = ""
				lSum = LengthOf(sum) - 1
				for i = lSum to 0 step -1 {
					this.n += sum[i]
				}
		}
		return this
		
	block Value()
		return n
		
#9879888888888888888444444444488888888888888888888888888888888888888
#8798888888888888884444444444488888888888888888888888888888888888888