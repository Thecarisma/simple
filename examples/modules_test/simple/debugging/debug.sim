/* 
	Copyright (c) 2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple-lang
*/

/* 
 * @Filename - debugging.sim 
 * @Author - Azeez Adewale
 * @Date - 06 July 2018
 * @Time - 02:37 PM
 */

/*
	This file is a stress and elaborating example of using the 
	simple-lang debugging module @Module simple/debugging/
*/

from simple.util.Length
from simple.util.Console
from simple.debugging.Throw
from simple.debugging.Debug

block main()
	errorList = [
		"ERROR NOT VALID ",
		"",
		"This file cannot be found in the directory",
		"This is the title",
		"Error occur and it thrown With title in index [2]"
	]

	for a = 0 to GetTypeLength(errorList) - 1 {
		One(errorList[a])
	}

	Four()
	
	/*
		The ThrowWithTitle() block are used to create an error with a custom 
		title and message
	*/
	#ThrowWithTitle(errorList[3],errorList[4])
	ThrowOnlyWithTitle(errorList[3],errorList[4])
	
	/*
		Now we go ahead to warn
		Warning is only possible if simple-lang is executed with 
			-w or --warning flag
		if it now executed with the flags then the error is never displayed
		to force error to show use the ThrowOnly(errrovalue) block instead
	*/
	Warn("This is a warning you see this if executed with -w")
	Warn("This is a warning you see this if executed with --warining")
	Warn("Final Warning")
	
	/*
		Assertion : only boolean and number is asserted
	*/
	Assert("string not assert able") #fails
	Assert((true == false)) #fails
	Assert((1 > -300)) #pass
	
	/*
		Now we catch an error in one of the error thrown above
	*/
	try {
		One(errorList[2])
	catch
		stdout.Println("\nThis error was catched |> " + __err__ + " <<<")
	}

block One(a)
	Two(a)

block Two(a)
	Three(a)
	
/*
	Right here the ThrowOnly() only block is called 
	so we can keep the error coming without having
	to exit the program purely error tolerance
*/
block Three(a)
	ThrowOnly(a)
	
block Four()
	stactTrace = StackTrace()
	stdout.Println(stactTrace)
